x-airflow-common:
  &airflow-common
  build:
    context: .
    dockerfile: Dockerfile
    args:
      - AIRFLOW_IMAGE_VERSION=${AIRFLOW_IMAGE_VERSION:-latest}
      - AIRFLOW_USER=${AIRFLOW_USER:-airflow}
      - AIRFLOW_PASSWORD=${AIRFLOW_PASSWORD:-airflow}
      - AIRFLOW_HOME=${AIRFLOW_HOME:-/opt/airflow}
      - AIRFLOW_UID=${AIRFLOW_UID:-50000}
  env_file:
    - .env
  volumes:
    - ./dags:${AIRFLOW_HOME:-/opt/airflow}/dags
    - ./logs:${AIRFLOW_HOME:-/opt/airflow}/logs
    - ./plugins:${AIRFLOW_HOME:-/opt/airflow}/plugins
  user: "${AIRFLOW_UID:-50000}:0"
  depends_on:
    &airflow-common-depends-on
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:13
    restart: always
    env_file:
      - .env    
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-db-volume:/opt/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5

  redis:
    image: redis:latest
    expose:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    restart: always

  webserver:
    <<: *airflow-common
    command: webserver
    restart: always
    env_file:
      - .env
    volumes:
      - ./airflow.cfg:${AIRFLOW_HOME:-/opt/airflow}/airflow.cfg
      - ./webserver_config.py:${AIRFLOW_HOME:-/opt/airflow}/webserver_config.py
    ports:
      - 8080:8080
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully

  scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always
    env_file:
      - .env
    volumes:
      - ./airflow.cfg:${AIRFLOW_HOME:-/opt/airflow}/airflow.cfg
      - ./webserver_config.py:${AIRFLOW_HOME:-/opt/airflow}/webserver_config.py
    healthcheck:
      test: ["CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"']
      interval: 10s
      timeout: 10s
      retries: 5
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully

  airflow-init:
    <<: *airflow-common
    env_file:
      - .env
    volumes:
      - ./:${AIRFLOW_HOME:-/opt/airflow}
    entrypoint: /bin/bash
    command: 
      - -c
      - |
        mkdir -p ./dags ./plugins ./logs
        if ! grep '^AIRFLOW_UID=[0-9]' .env ; then 
          echo -e "AIRFLOW_UID=$$(id -u)\n" >> .env
        fi
        chmod 777 -R logs
        airflow db init
        airflow db upgrade
        airflow users create \
            -r $ROLE \
            -u $USER \
            -p $PASSWORD \
            -f $FIRST \
            -l $LAST \
            -e $EMAIL
    environment:
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
    depends_on:
      <<: *airflow-common-depends-on

  airflow-cli:
    <<: *airflow-common
    profiles:
      - debug
    env_file:
      - .env
    environment:
      CONNECTION_CHECK_MAX_COUNT: "0"
    command:
      - bash
      - -c
      - airflow

volumes:
  postgres-db-volume:
